{
  "_args": [
    [
      {
        "raw": "rn-nodeify",
        "scope": null,
        "escapedName": "rn-nodeify",
        "name": "rn-nodeify",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/wqf/Desktop/third/blinder-rnapp"
    ]
  ],
  "_cnpm_publish_time": 1545310584345,
  "_from": "rn-nodeify",
  "_hasShrinkwrap": false,
  "_id": "rn-nodeify@10.0.1",
  "_location": "/rn-nodeify",
  "_nodeVersion": "8.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rn-nodeify_10.0.1_1545310584241_0.6923217907125752"
  },
  "_npmUser": {
    "name": "tenaciousmv",
    "email": "mark@tradle.io"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {
    "jsonfile": "2.4.0",
    "rimraf": "2.6.2"
  },
  "_requested": {
    "raw": "rn-nodeify",
    "scope": null,
    "escapedName": "rn-nodeify",
    "name": "rn-nodeify",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "http://registry.npm.taobao.org/rn-nodeify/download/rn-nodeify-10.0.1.tgz",
  "_shasum": "b54a3f2a61eda88b40639ee9262f51f34039e353",
  "_shrinkwrap": null,
  "_spec": "rn-nodeify",
  "_where": "/Users/wqf/Desktop/third/blinder-rnapp",
  "bin": {
    "rn-nodeify": "./cmd.js"
  },
  "bugs": {
    "url": "https://github.com/mvayngrib/rn-nodeify/issues"
  },
  "dependencies": {
    "@yarnpkg/lockfile": "^1.0.0",
    "deep-equal": "^1.0.0",
    "findit": "^2.0.0",
    "fs-extra": "^0.22.1",
    "minimist": "^1.1.2",
    "object.pick": "^1.1.1",
    "run-parallel": "^1.1.2",
    "semver": "^5.0.1",
    "xtend": "^4.0.0"
  },
  "description": "Run after npm install and you can use node core modules and npm modules that use them in your React Native app.",
  "devDependencies": {
    "husky": "^0.14.3"
  },
  "directories": {},
  "dist": {
    "shasum": "b54a3f2a61eda88b40639ee9262f51f34039e353",
    "size": 11551,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/rn-nodeify/download/rn-nodeify-10.0.1.tgz"
  },
  "gitHead": "ea456db433956aa734be6f2eca149b59f1257a39",
  "homepage": "https://github.com/mvayngrib/rn-nodeify#readme",
  "license": "MIT",
  "maintainers": [
    {
      "name": "genevayngrib",
      "email": "gene.vayngrib@tradle.io"
    },
    {
      "name": "pgmemk",
      "email": "ellen.katsnelson@lablz.com"
    },
    {
      "name": "tenaciousmv",
      "email": "mark.vayngrib@lablz.com"
    }
  ],
  "name": "rn-nodeify",
  "optionalDependencies": {},
  "preferGlobal": true,
  "publish_time": 1545310584345,
  "readme": "# rn-nodeify\n\nRun after npm install and you can use node core modules and npm modules that use them in your React Native app.\n\n## What is solves\n\nIf your project has no non-React-Native dependencies, you don't need this module, and you should just check out ['./shims.js'](./shims.js) for the core node modules to use individually.\n\nHowever, with bigger projects that don't reimplement every wheel from scratch, somewhere in your dependency tree, something uses a core node module. I found myself building this because in my React Native app, I wanted to use [bitcoinjs-lib](https://github.com/bitcoinjs/bitcoinjs-lib), [levelup](https://github.com/Level/levelup), [bittorrent-dht](https://github.com/feross/bittorrent-dht), and lots of fun crypto. If that sounds like you, keep reading.\n\n## What it does\n\n`rn-nodeify --install`\ninstalls shims for core node modules, see ['./shims.js'](./shims.js) for the current mappings. It recurses down `node_modules` and modifies all the `package.json`'s in there to add/update the `browser` and `react-native` fields. It sounds scary because it is. However, it does work.\n\n`rn-nodeify --hack`\nNow that you're scared, I should also mention that there are some package-specific hacks (see ['./pkg-hacks.js'](./pkg-hacks.js)), for when the React Native packager choked on something that Webpack and Browserify swallowed.\n\nIf you're looking for a saner approach, check out [ReactNativify](https://github.com/philikon/ReactNativify). I haven't tested it myself, but I think [philikon](https://github.com/philikon) will be happy to help.\n\n## Usage\n\n```bash\nrn-nodeify <options>\n```\n\n## Options\n\n```\n--install     install node core shims (default: install all), fix the \"browser\"\n              and \"react-native\" fields in the package.json's of dependencies\n--hack        hack individual packages that are known to make the React Native packager choke\n```\n\n### Examples\n\n```bash\n# install all shims and run package-specific hacks\nrn-nodeify --install --hack\n```\n\n```bash\n# install specific shims\nrn-nodeify --install \"fs,dgram,process,path,console\"\n```\n\n```bash\n# install specific shims and hack\nrn-nodeify --install \"fs,dgram,process,path,console\" --hack\n```\n\nIt is recommended to add this command to the \"postinstall\" script in your project's package.json\n\n```json\n\"scripts\": {\n  \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n  \"postinstall\": \"rn-nodeify --install fs,dgram,process,path,console --hack\"\n}\n```\n\nrn-nodeify will create a `shim.js` file in your project root directory. The first line in index.ios.js / index.android.js should be to `import` it (NOT `require` it!)\n\n```js\nimport './shim'\n```\n\nIf you are using the crypto shim, you will need to manually uncomment the line to `require('crypto')` in `shim.js`, this is because as of react-native 0.49, dynamically requiring a library is no longer allowed.\n\nSome shims may require linking libraries, be sure to run `react-native link` after installing new shims if you run into problems.\n\n### Example Apps / Workflows\n\n* the [react-native-crypto](https://github.com/mvayngrib/react-native-crypto) package has an example workflow for using crypto in a React Native app\n* this [example React Native app](https://github.com/mvayngrib/adexample) shows how you can use [levelup](https://github.com/Level/levelup) in React Native\n\n### Example Workflow\n\ncopied from [react-native-crypto](https://github.com/mvayngrib/react-native-crypto)\n\n1. Install and shim\n  ```sh\n  npm i --save react-native-crypto\n  # install peer deps\n  npm i --save react-native-randombytes\n  react-native link react-native-randombytes\n  # install latest rn-nodeify\n  npm i --save-dev mvayngrib/rn-nodeify\n  # install node core shims and recursively hack package.json files\n  # in ./node_modules to add/update the \"browser\"/\"react-native\" field with relevant mappings\n  ./node_modules/.bin/rn-nodeify --hack --install\n  ```\n\n2. `rn-nodeify` will create a `shim.js` in the project root directory\n  ```js\n  // index.ios.js or index.android.js\n  // make sure you use `import` and not `require`!\n  import './shim.js'\n  // ...the rest of your code\n  import crypto from 'crypto'\n  // use crypto\n  console.log(crypto.randomBytes(32).toString('hex'))\n  ```\n\n## Please note...\n\n- rn-nodeify won't work with modules that are added using `npm link`.\n- modules that contain a .babelrc will cause problems with the latest react-native version (0.20 at this time), remove them after installation (`rm node_modules/*/.babelrc`)\n- when installing a package from git, the postinstall hook isn't triggered, run it manually instead (`npm run postinstall`)\n- restart the react-native packager after installing a module!\n- removing the packager cache helps as well sometimes (`rm -fr $TMPDIR/react-*`)\n- rn-nodeify currently uses `npm` to install shims. PRs are welcome to make it compatible with `yarn`\n- use `npm@3`. `npm@5` has some issues that cause `node_modules` to disappear. See:\n  - https://github.com/mvayngrib/rn-nodeify/issues/42\n  - https://github.com/infinitered/ignite/issues/1101\n  - https://github.com/npm/npm/issues/16839\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mvayngrib/rn-nodeify.git"
  },
  "scripts": {
    "lint": "eslint --quiet --ignore-path .gitignore .",
    "precommit": "npm run lint"
  },
  "version": "10.0.1"
}
