{
  "_args": [
    [
      {
        "raw": "react-native-audio",
        "scope": null,
        "escapedName": "react-native-audio",
        "name": "react-native-audio",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/wqf/Desktop/third/blinder-rnapp"
    ]
  ],
  "_cnpm_publish_time": 1543960824891,
  "_from": "react-native-audio",
  "_hasShrinkwrap": false,
  "_id": "react-native-audio@4.3.0",
  "_location": "/react-native-audio",
  "_nodeVersion": "9.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-audio_4.3.0_1543960824784_0.9558035243576302"
  },
  "_npmUser": {
    "name": "jsierles",
    "email": "joshua@diluvia.net"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-audio",
    "scope": null,
    "escapedName": "react-native-audio",
    "name": "react-native-audio",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "http://registry.npm.taobao.org/react-native-audio/download/react-native-audio-4.3.0.tgz",
  "_shasum": "fae22b81f6a4dda706fd4837d0c6a89c66cf2e7e",
  "_shrinkwrap": null,
  "_spec": "react-native-audio",
  "_where": "/Users/wqf/Desktop/third/blinder-rnapp",
  "author": {
    "name": "Joshua Sierles",
    "email": "joshua@diluvia.net",
    "url": "https://github.com/jsierles"
  },
  "bugs": {
    "url": "https://github.com/jsierles/react-native-audio/issues"
  },
  "dependencies": {},
  "description": "React Native extension for recording audio",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "fae22b81f6a4dda706fd4837d0c6a89c66cf2e7e",
    "size": 14555,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/react-native-audio/download/react-native-audio-4.3.0.tgz"
  },
  "files": [
    "ios/AudioRecorderManager.m",
    "ios/AudioRecorderManager.h",
    "ios/RNAudio.xcodeproj",
    "README.md",
    "LICENSE",
    "index.js",
    "android/*",
    "RNAudio.podspec"
  ],
  "gitHead": "208bb34cfc90d1299a6952681776f2b1732c30c5",
  "homepage": "https://github.com/jsierles/react-native-audio#readme",
  "keywords": [
    "react-native",
    "audio",
    "record"
  ],
  "main": "index.js",
  "maintainers": [
    {
      "name": "jsierles",
      "email": "joshua@diluvia.net"
    }
  ],
  "name": "react-native-audio",
  "nativePackage": true,
  "optionalDependencies": {},
  "publish_time": 1543960824891,
  "readme": "Record audio in iOS or Android React Native apps.\n\n## BREAKING CHANGES\n\nFor React Native >= 0.47.2, use v3.4.0 and up.\nFor React Native >= 0.40, use v3.1.0 up til 3.2.2.\nFor React Native <= 0.39, use v3.0.0 or lower.\n\nv4.0 introduced a breaking change to the API to introduce distinct pause and resume methods.\n\nv3.x removed playback support in favor of using more mature libraries like [react-native-sound](https://github.com/zmxv/react-native-sound). If you need to play\nfrom the network, please submit a PR to that project or try `react-native-video`.\n\n### Installation\n\nInstall the npm package and link it to your project:\n\n```\nnpm install react-native-audio --save\nreact-native link react-native-audio\n```\n\nOn *iOS* you need to add a usage description to `Info.plist`:\n\n```\n<key>NSMicrophoneUsageDescription</key>\n<string>This sample uses the microphone to record your speech and convert it to text.</string>\n```\n\nOn *Android* you need to add a permission to `AndroidManifest.xml`:\n\n```\n<uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\n```\n\n### Manual Installation\n\nThis is not necessary if you have used `react-native link`\n\n#### Android\n\nEdit `android/settings.gradle` to declare the project directory:\n```\ninclude ':react-native-audio'\nproject(':react-native-audio').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-audio/android')\n```\n\nEdit `android/app/build.gradle` to declare the project dependency:\n```\ndependencies {\n  ...\n  compile project(':react-native-audio')\n}\n```\n\nEdit `android/app/src/main/java/.../MainApplication.java` to register the native module:\n\n```java\n...\nimport com.rnim.rn.audio.ReactNativeAudioPackage; // <-- New\n...\n\npublic class MainApplication extends Application implements ReactApplication {\n  ...\n  @Override\n  protected List<ReactPackage> getPackages() {\n    return Arrays.<ReactPackage>asList(\n        new MainReactPackage(),\n        new ReactNativeAudioPackage() // <-- New\n    );\n  }\n```\n\n#### iOS\n\nDrag `node_modules/react-native-audio/ios/RNAudio.xcoderproj` into your project's Libraries on Xcode.\n\nAdd `libRNAudio.a` into Link Binary With Libraries from Xcode - Build Phases.\n\n\n### Running the Sample App\n\nIn the `AudioExample` directory:\n\n```\nnpm install\nreact-native run-ios\nreact-native run-android\n```\n\n### Usage\n\nTo record in AAC format, at 22050 KHz in low quality mono:\n\n```\nimport {AudioRecorder, AudioUtils} from 'react-native-audio';\nlet audioPath = AudioUtils.DocumentDirectoryPath + '/test.aac';\n\nAudioRecorder.prepareRecordingAtPath(audioPath, {\n  SampleRate: 22050,\n  Channels: 1,\n  AudioQuality: \"Low\",\n  AudioEncoding: \"aac\"\n});\n```\n\n`AudioQuality` is supported on iOS. `Low`, `Medium`, and `High` will translate to `AVAudioQualityLow`, `AVAudioQualityMedium`, and `AVAudioQualityHigh` respectively.\n\n#### Cross-platform options\n\n```\nSampleRate: int\nChannels: int\nAudioQuality: string\nAudioEncoding: string\nIncludeBase64: boolean\n```\n\nEncodings supported on iOS: `lpcm, ima4, aac, MAC3, MAC6, ulaw, alaw, mp1, mp2, alac, amr`\nEncodings supported on Android: `aac, aac_eld, amr_nb, amr_wb, he_aac, vorbis`\n\nUse the `IncludeBase64` boolean to include the `base64` encoded recording on the `AudioRecorder.onFinished` event object. Please use it with care: passing large amounts of data over the bridge, from native to Javascript, can use lots of memory and cause slow performance.\n\nIf you want to upload the audio, it might be best to do it on the native thread with a package like [React Native Fetch Blob](https://github.com/joltup/react-native-fetch-blob).\n\n#### iOS-only fields\n\nUse `MeteringEnabled` boolean to enable audio metering. The following values are available on the recording progress object. \n\n| Name | Related AVAudioRecorder parameter | Description |\n|------|-----------------------------------|-------------|\n|currentMetering| averagePowerForChannel | The current average power, in decibels, for the sound being recorded. A return value of 0 dB indicates full scale, or maximum power; a return value of -160 dB indicates minimum power (that is, near silence). If the signal provided to the audio recorder exceeds ±full scale, then the return value may exceed 0 (that is, it may enter the positive range).|\n|currentPeakMetering | peakPowerForChannel | The current peak power, in decibels, for the sound being recorded. A return value of 0 dB indicates full scale, or maximum power; a return value of -160 dB indicates minimum power (that is, near silence). If the signal provided to the audio recorder exceeds ±full scale, then the return value may exceed 0 (that is, it may enter the positive range).|\n\nFor example: \n\n```js\nAudioRecorder.onProgress = (data) => {\n    console.log(data.currentMetering, data.currentPeakMetering)\n};\n```\n\n#### Android-only fields\n\nAudioEncodingBitRate: int\n\nOutputFormat: string, `mpeg_4, aac_adts, amr_nb, amr_wb, three_gpp, webm`\n\nAudioSource: int (constants) (Possible values: AudioSource.DEFAULT, AudioSource.MIC, AudioSource.VOICE_UPLINK, AudioSource.VOICE_DOWNLINK, AudioSource.VOICE_CALL, AudioSource.CAMCORDER, AudioSource.VOICE_RECOGNITION, AudioSource.VOICE_COMMUNICATION, AudioSource.REMOTE_SUBMIX, AudioSource.UNPROCESSED)\n\nSee [the example](https://github.com/jsierles/react-native-audio/blob/master/AudioExample/index.ios.js) for more details. For playing audio check out [React Native Sound](https://github.com/zmxv/react-native-sound)\n\nMP3 recording is *not supported* since the underlying platforms do not support it.\n\nThanks to Brent Vatne, Johannes Lumpe, Kureev Alexey, Matthew Hartman and Rakan Nimer for their assistance.\n\nProgress tracking code borrowed from https://github.com/brentvatne/react-native-video.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/jsierles/react-native-audio.git"
  },
  "version": "4.3.0"
}
