var chai = require("chai");
var chaiAsPromised = require("chai-as-promised");

chai.use(chaiAsPromised);
var should = require('chai').should();

var HttpClient = require('./index');
var http = new HttpClient();

http.$setErrHandingRule(setRule);

// 设置错误处理规则，传入到client中
function setRule(data) {

  if(typeof data.message != 'undefined' && typeof data.message.code != 'undefined') {
    if(data.message.code == '0') {
      return {
        isBusinessErr: false,
      };
    } else {
      return {
        isBusinessErr: true,
        businessErrDesc: 'error with messagecode not equal 0',
        businessErrCode: data.message.code

      };
    }
  } else {
    return {
      isBusinessErr: false,
    }
  }

}

describe('测试https请求', function(done){
  this.timeout(5000);
  it('should return 200 and parse json text to object', function(){
    return http.$getJson('https://p.jinhui365.com/currentTime').should.eventually.satisfy(function(obj){
      return obj.message.code == 0;
    }).notify(done);
  });
});


describe('测试json解析', function(done){
  this.timeout(5000);
  it('should parse json text to object', function(){
    return http.$getJson('http://p.jinhui365.com/currentTime').should.eventually.satisfy(function(obj){
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试统一前缀设置', function(done){
  before(function() {
    http.$setUrlPrefix('http://p.jinhui365.com');
  });

  it('should add prefix for uri', function(){
    return http.getOptions('/currentTime').should.satisfy(function(obj){
      return obj.uri == 'http://p.jinhui365.com/currentTime';
    });
  });
});


describe('测试单例', function(done){
  this.timeout(5000);
  before(function() {
    var http = HttpClient.$getDefaultClient('http://p.jinhui365.cn');
    http.$setErrHandingRule(setRule);
  });

  it('should return 200 and parse json text to object', function(){
    return HttpClient.$getDefaultClient().$getJson('/currentTime').should.eventually.satisfy(function(obj){
      return obj.message.code == 0;
    }).notify(done);
  });
});


describe('测试入参过滤器设置', function(){
  before(function() {
    http.$addParamsFilter({
      filterParams:function(params) {
        params.__addParam = 1;
        return params;
      }
    });
  });

  it('should handle get request', function(){
    return http.getOptions('http://p.jinhui365.com/currentTime', 'GET').should.satisfy(function(obj){
      return obj.uri.indexOf('__addParam') > 0;
    });
  });

  it('should handle post request', function(){
    return http.getOptions('http://p.jinhui365.com/currentTime', 'POST', {a:1,b:2}).should.satisfy(function(obj){
      return obj.form.__addParam == 1;
    })
  });

  after(function() {
    http.$clearParamsFilter();
  });
});

describe('测试参数拼接', function(done){


  it('url和params都有参数，拼接正确', function(){
    return http.getOptions('http://p.jinhui365.com/currentTime?a=1', 'GET', {b:2}).should.satisfy(function(obj){
      return obj.uri == 'http://p.jinhui365.com/currentTime?a=1&b=2';
    });
  });

  it('只有params有参数，拼接正确', function(){
    return http.getOptions('http://p.jinhui365.com/currentTime', 'GET', {b:2}).should.satisfy(function(obj){
      return obj.uri == 'http://p.jinhui365.com/currentTime?b=2';
    });
  });

  it('只有url有参数，拼接正确', function(){
    return http.getOptions('http://p.jinhui365.com/currentTime?a=1', 'GET').should.satisfy(function(obj){
      return obj.uri == 'http://p.jinhui365.com/currentTime?a=1';
    });
  });

});


describe('测试基本功能', function(done){
  this.timeout(5000);
  before(function() {
    var http = HttpClient.$getDefaultClient('http://p.jinhui365.cn');
    http.$setErrHandingRule(setRule);
    http.$setLoggerGeneralParamter && http.$setLoggerGeneralParamter({client:'website'})
    http.$setLoggerFilterParamter && http.$setLoggerFilterParamter(['currentTime'])
  });

  it('http-get-服务器时间接口，返回message.code 等于0', function(){
    return HttpClient.$getDefaultClient().$getJson('/currentTime').should.eventually.satisfy(function(obj){
      return obj.message.code == 0;
    }).notify(done);
  });

  it.skip('http-post-登录接口，返回message.code 等于0', function(){
    return HttpClient.$getDefaultClient().$postJson('/login.decryption',{uinfo: '11100006789', password: '111111', client:'website'}).should.eventually.satisfy(function(obj){
      return obj.message.code == 0;
    }).notify(done);
  });
});
