/**
 * 用户行为相关（登陆、注册、开户、绑卡）请求方法集合
 * @param httpClient {Object}
 * @constructor
 */
var UserService = function(httpClient) {
  this.http = httpClient;
};

/**
 * @description 登录
 * @param {String} uinfo      用户手机号或身份证号
 * @param {String} password   用户登陆密码
 * @see https://trac.gemantic.com/wiki/api/licai/user/login
 */
UserService.prototype.$login = function (uinfo, password) {
  var url = '/login.decryption';
  return this.http.$postJson(url, {uinfo: uinfo, password: password});
};
/**
 * @description 获取用户信息
 * @param {String}  uid   用户id
 * @see https://trac.gemantic.com/wiki/api/licai/user/get_user_info
 */
UserService.prototype.$getUserInfo = function (uid, token) {
  var url = '/user/' + uid;
  var payload = token ? {uid:uid, token:token} : {};
  return this.http.$getJson(url, payload);
};
/**
 * @description 注册
 * @param {String} mobile       手机号
 * @param {String} password     登陆密码
 * @param {String} verifyCode   验证码
 * @param {String} referrerId   推荐人客户编号，可选
 * @param {String} friendId     推荐人用户id，可选
 * @param {String} ut           引流渠道，用于活动效果统计，可选
 * @param {String} cl           合作渠道，用户分佣，可选
 * @see https://trac.gemantic.com/wiki/api/licai/user/register
 */
UserService.prototype.$register = function (mobile, password, verifyCode, referrerId, friendId, ut, cl) {
  var url = '/user/';
  return this.http.$postJson(url, {
    mobile: mobile,
    password: password,
    verifyCode: verifyCode,
    referrerId: referrerId,
    friendId: friendId,
    ut: ut,
    cl: cl,
    source: 5
  });
};

/**
 * @description 发送验证码
 * @param {String} mobile  手机号
 * @param {String} type    类型
 * @param {String} action    值为'audio'表示语音验证码
 * @see https://trac.gemantic.com/wiki/api/licai/user/send_mobile_verify_code
 */
UserService.prototype.$sendVerifyCode = function (mobile, type, action) {
  var url = "/vcode/mobile";
  action = action || '';
  return this.http.$postJson(url, {
    uinfo: mobile,
    type: type,
    action: action
  });
};

/**
 * @description 获取用户编号
 * @param {String}  uid   用户id
 * @see https://trac.gemantic.com/wiki/api/licai/account/get_user_account
 */
UserService.prototype.$getClientID = function (uid) {
  var url = '/clientId/' + uid;
  return this.http.$getJson(url);
};

/**
 * @description 忘记密码
 * @param {String}  mobile     手机号
 * @param {String}  password   新密码
 * @param {String}  vcode 手机验证码
 * @see https://trac.gemantic.com/wiki/api/licai/user/find_login_password
 */
UserService.prototype.$forgetPwd = function (mobile, password, vcode) {
  var url = '/vcode/password/recovery.decryption';
  return this.http.$postJson(url, {
    mobile: mobile,
    password: password,
    vcode: vcode,
    randomToken: ''
  });
};

/**
 * @description 重置登录密码
 * @param {String}  oldPassword   旧登录密码
 * @param {String}  newPassword   新登录密码
 * @see https://trac.gemantic.com/wiki/api/licai/user/update_login_password
 */
UserService.prototype.$modifyLoginPsw = function (oldPassword, newPassword) {
  var url = '/user/password/modify.decryption';
  return this.http.$postJson(url, {
    oldPassword: oldPassword,
    newPassword: newPassword,
    randomToken: ''
  });
};

/**
 * @description 重置交易密码
 * @param {String}  password   旧交易密码
 * @param {String}  newPassword   新交易密码
 * @see http://tools.jinhui365.cn/#!/interface/detail?id=22
 */
UserService.prototype.$modifyDealPsw = function (password, newPassword) {
  var url = '/user/tranpwd/modify.decryption';
  return this.http.$postJson(url, {
    password: password,
    newPassword: newPassword,
    randomToken: ''
  });
};

/**
 * @description 更新用户是否为合格投资者的状态
 * @see http://tools.jinhui365.cn/#!/interface/detail?id=219
 */
UserService.prototype.$updateQInvestorStatus = function () {
  var url = '/user/updateQInvestor';
  return this.http.$getJson(url, {});
}

/**
 * @description 验证appkey是否合法
 * @param {String}  params   第三方客户端传入的所有参数(其中时间戳为string)
 * @see http://tools.jinhui365.cn/#!/interface/detail?id=227
 */
UserService.prototype.$verifyAccount = function(params) {
  var url = '/params/authorized';
  return this.http.$postJson(url, {
    params: params
  });
}

/**
 * @description 重置交易密码
 * @param {String}  password   用户的登录密码
 * @param {String}  thirdAppkey   第三方客户端授权的appkey
 * @param {String}  idNo   身份证号码
 * @see http://tools.jinhui365.cn/#!/interface/detail?id=223
 */
UserService.prototype.$bindAccount = function (thirdAppkey, idNo,  password) {
  var url = '/user/bundling';
  return this.http.$postJson(url, {
    password: password,
    thirdAppkey: thirdAppkey,
    idNo: idNo
  });
}

/**
 * @description 重置交易密码
 * @param {String}  loginIp   用户登录ip
 * @param {String}  uid   用户id
 * @param {String}  userAgent   请求头userAgent
 * @see http://tools.jinhui365.cn/#!/interface/detail?id=233
 */
UserService.prototype.$loginRecord = function (loginIp, uid, userAgent) {
  var url = '/user/addLoginRecord';
  return this.http.$postJson(url, {
    loginIp: loginIp,
    uid: uid,
    userAgent: userAgent
  });
}

/**
 * @description 获取用户token
 * @param {String}  uid   用户id
 * @see http://tools.jinhui365.cn/interface/detail?id=94
 */
UserService.prototype.$getUserToken = function (uid) {
  var url = '/token/' + uid;
  return this.http.$getJson(url);
};

/**
 * @description 获取注册页活动
 * @see http://tools.jinhui365.cn/interface/detail?id=272
 */
UserService.prototype.$GetRegistrationActivity = function () {
  var url = '/registration/activity';
  return this.http.$postJson(url);
};

module.exports = exports = UserService;
