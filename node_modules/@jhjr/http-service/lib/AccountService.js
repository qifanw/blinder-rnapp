/**
 * Created by ztian on 16/7/12.
 */

/**
 * @description 开户绑卡相关请求方法集合
 * @param {Object}
 * @constructor
 */
var AccountService = function(httpClient) {
  this.http = httpClient;
};

/**
 * @description 开户
 * @param params {Object} 请求参数集合，如下
 * * idNo：身份证件号
 * * idKind：证件种类：0-身份证
 * * clientName：真实姓名
 * * mobiletelephone：手机号
 * * password：金汇交易密码
 * * bankNo：银行编号
 * * bankAccount：银行卡号
 * * gtTradePassword：华创交易密码
 * * tiedCardType：支付方式：0-快捷，1-网关
 * * useType：使用方式0 标准(直连银行)1 小额(银联)2 金融联
 * * phoneNo：银行预留手机号
 * * identifyingCode：验证码（证联发送，开户非华创账号）
 * @see https://trac.gemantic.com/wiki/api/licai/account/open
 */
AccountService.prototype.$openAccount = function(params) {
  var url = '/user/openAccount';
  return this.http.$postJson(url, params);
};

/**
 * @description 获取支持绑定的银行列表
 * @param type {String}
 * 银行渠道类型，默认2
 *
 * * 1：金融联和银联
 * * 2：银联
 * * 3：金融联
 *
 *
 * @see https://trac.gemantic.com/wiki/api/licai/account/bank_list
 */
AccountService.prototype.$getSupportBanks = function(type) {
  type = type || 2;
  var url = '/bankList';
  return this.http.$getJson(url, {
    bankVersion: type
  });
};

/**
 * @description 获取用户已绑定的银行列表
 *
 * @see https://trac.gemantic.com/wiki/api/licai/account/get_user_bank_list
 */
AccountService.prototype.$getUserBindBanks = function() {
  var url = '/user/banks';
  return this.http.$getJson(url);
};

AccountService.prototype.$getUserBindBanksV3 = function() {
  var url = '/user/banks/V3';
  return this.http.$getJson(url);
};
/**
 * @description 绑卡（金融联）获取短信验证码
 * @param {String} mobile      手机号
 * @param {String} idNo        身份证件号
 * @param {String} bankNo      银行卡编号
 * @param {String} bankAccount 银行卡号
 * @see https://trac.gemantic.com/wiki/api/licai/account/get_verify_code
 */
AccountService.prototype.$getAccountVerifyCode = function(mobile, idNo, bankNo, bankAccount) {
  var url = '/vcode/cards';
  return this.http.$postJson(url, {
    registerMobile: mobile,
    reserveMobile: mobile,
    userType: 0, // 个人0，机构1
    certId: idNo,
    bankNo: bankNo,
    bankAccount: bankAccount
  });
};

/**
 * @description 银行卡识别
 * @param {String} cardId      银行卡号
 * @see http://tools.jinhui365.cn/#!/interface/detail?id=46
 */
AccountService.prototype.$getBankInfoByCardId = function(cardId) {
  var url = '/offline/checkBankCard';
  return this.http.$getJson(url, {
    cardId: cardId
  });
};

/**
 * @description 用户风险登记处测评
 * @param params {Object} 请求参数集合，如下
 * @see http://tools.jinhui365.cn/#!/interface/detail?id=95
 */
AccountService.prototype.$userRiskGradeEvaluation = function(params) {
  var url = '/user/riskGradeEvaluation';
  return this.http.$postJson(url, params);
};

/**
 * @description 绑卡FAQ
 * @param {String} bankNo      银行卡编号
 * @param {String} platNo      所属平台
 * @see http://tools.jinhui365.cn/#!/interface/detail?id=140
 */
AccountService.prototype.$getBankFAQInfo = function(bankNo) {
  var url = '/bank/faq';
  return this.http.$getJson(url, {
    platNo: 2,
    bankNo: bankNo
  });
};

module.exports = exports = AccountService;