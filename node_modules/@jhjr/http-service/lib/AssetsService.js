/**
 * @description 资产相关请求方法集合
 * @param httpClient {Object}
 * @constructor
 */
var AssetsService = function(httpClient) {
  this.http = httpClient;
};

/**
 * @description 获取用户资产信息
 * @see https://trac.gemantic.com/wiki/api/licai/assets/index
 */
AssetsService.prototype.$getAssets = function() {
  var url = '/user/position/count';
  return this.http.$getJson(url);
};
/**
 * @description 获取用户资产信息新接口
 *
 */

AssetsService.prototype.$getNewAssets = function(pointType,assetsType) {
  var url = '/user/assets/V1';
  pointType = pointType || '';
  assetsType = assetsType || '';
  return this.http.$getJson(url,{
    pointType:pointType,
    assetsType:assetsType
  });
};

/**
 * @description 获取昨日收益
 * @see https://trac.gemantic.com/wiki/api/licai/assets/index
 */

AssetsService.prototype.$getYesterdayIncome = function (fundCode) {
  var url = '/gm/getYesterdayIncome';
  var fundCode = fundCode;
  return this.http.$getJson(url,{
    fundCode:fundCode
  })
}


/**
 * @description 获取最新收益和最新收益日期的接口
 * @see http://tools.jinhui365.cn/interface/detail?id=675
 */

AssetsService.prototype.$getLastIncome = function (fundCode) {
  var url = '/gm/moneyFund/recentIncome';
  var fundCode = fundCode;
  return this.http.$getJson(url,{
    fundCode:fundCode
  })
}

/**
 * @description 获取定期资产持仓
 * @param {String} type 定期资产类型，具体参见文档
 * @see https://trac.gemantic.com/wiki/api/licai/assets/fixed
 */
AssetsService.prototype.$getFixedAssets = function(type) {
  var url = '/user/spirit/position/query';
  return this.http.$getJson(url, {
    mStockType: type
  });
};

/**
 * 产品收益明细查询
 * @param type              收益类型，默认为活期收益，具体参考 {@link https://trac.gemantic.com/wiki/api/licai/assets/periodic|接口文档}
 * @param currentPage       当前页数
 * @param pageSize          每页多少条记录
 * @param cashFundCompany   产品发行商，可不传
 * @param cashFundCode      产品发行商，可不传
 * @see {@link https://trac.gemantic.com/wiki/api/licai/assets/periodic|接口文档}
 */
AssetsService.prototype.$getProfit = function(type, currentPage, pageSize, cashFundCode, cashFundCompany) {
  type = type || 'A0';
  currentPage = currentPage || 1;
  pageSize = pageSize || 20;

  var url = '/user/jinhuibao/incomeflow/query';
  return this.http.$getJson(url, {
    incomeType: type,
    currentPage: currentPage,
    pageSize: pageSize,
    cashFundCode: cashFundCode,
    cashFundCompany: cashFundCompany

  })
};

/**
 * 客户红包查询
 * @param giveStatus   红包状态 1有效 2 失效
 * @see {@link http://tools.jinhui365.cn/#!/interface/detail?id=132 |接口文档}
 */
AssetsService.prototype.$getRedEnvelope = function(giveStatus, code) {
  var url = '/user/redEnvelopeV2/list';
  return this.http.$getJson(url, {
    giveStatus: giveStatus,
    fundCode: code
  })
};

/**
 * 我的宝箱查询
 * @param giveStatus    红包状态 1未使用 2 已使用 3 使用中 4已过期
 * @param code          购买的产品代码（查询购买页红包需要传）
 * @param giveType      红包类别(“1,2”：红包 ，“3”：加息券，不传默认返回红包和加息券)
 * @see {@link http://tools.jinhui365.cn/#!/interface/detail?id=132 |接口文档}
 */
AssetsService.prototype.$getChest = function(giveStatus, code, giveType) {
  var url = '/user/redEnvelopeV3/list';
  return this.http.$getJson(url, {
    giveStatus: giveStatus,
    fundCode: code,
    giveType: giveType
  })
};

/**
 * 交易记录查询
 * @param currentPage       当前页数
 * @param pageSize          每页多少条记录
 * @see {@link https://trac.gemantic.com/wiki/api/licai/assets/recordCombine |接口文档}
 */
AssetsService.prototype.$getRecord = function(currentPage, pageSize) {
  currentPage = currentPage || 1;
  pageSize = pageSize || 20;

  var url = '/user/record';
  return this.http.$getJson(url, {
    currentPage: currentPage,
    pageSize: pageSize
  })
};

/**
 * 在途资金查询
 * @see {@link https://trac.gemantic.com/wiki/api/licai/assets/uncome_count |接口文档}
 */
AssetsService.prototype.$getUncome = function() {
  var url = '/user/spirit/position/uncome';
  return this.http.$getJson(url)
};

/**
 * 客户V码列表查询
 * @param currentPage       当前页数
 * @param pageSize          每页多少条记录
 * @see {@link http://tools.jinhui365.cn/#!/interface/detail?id=77 |接口文档}
 */
AssetsService.prototype.$getVCodeList = function(currentPage, pageSize, vType, vmStatus) {
  currentPage = currentPage || 1;
  pageSize = pageSize || 20;
  vType = vType ||'';
  vmStatus = vmStatus || '1';

  var url = '/user/vMa';
  return this.http.$getJson(url, {
    currentPage: currentPage,
    pageSize: pageSize,
    vType: vType,
    vmStatus: vmStatus
  })
};

/**
 * 活期产品提现额度查询
 * @param fundType          类型：opencashw为爽活宝，否则为非爽活宝
 * @param cashFundCompany   产品发行商，可不传
 * @param cashFundCode      产品发行商
 * @see {@link https://trac.gemantic.com/wiki/api/licai/deal/current_redeem_limit |接口文档}
 */
AssetsService.prototype.$getUnfixLimit = function(fundType, cashFundCode, cashFundCompany) {
  var url = '/user/jinhuibao/limit/query';
  return this.http.$getJson(url, {
    fundType: fundType,
    cashFundCode: cashFundCode,
    cashFundCompany: cashFundCompany
  })
};

/**
 * 余额交易流水：全部、提现、充值
 * @param currentPage       当前页数
 * @param pageSize          每页多少条记录
 * @param type              流水类型
 * @see {@link https://trac.gemantic.com/wiki/api/licai/assets/balance_record |接口文档}
 */
AssetsService.prototype.$getBalanceRecord = function(currentPage, pageSize, type) {
  currentPage = currentPage || 1;
  pageSize = pageSize || 20;

  var url = '/user/balance/list';
  return this.http.$getJson(url, {
    currentPage: currentPage,
    pageSize: pageSize,
    flowType: type
  })
};

/**
 * 余额线下充值码列表查询
 * @param currentPage       当前页数
 * @param pageSize          每页多少条记录
 * @see {@link https://trac.gemantic.com/wiki/api/licai/assets/balance_record_offline |接口文档}
 */
AssetsService.prototype.$getOfflineChargeCode = function(currentPage, pageSize) {
  currentPage = currentPage || 1;
  pageSize = pageSize || 20;

  var url = '/user/balance/rechargeOffline';
  return this.http.$getJson(url, {
    currentPage: currentPage,
    pageSize: pageSize
  })
};

/**
 * 金汇活宝累计收益数据接口
 * @param businessFlag      红包状态 1有效 2 失效
 * @param mStockType        红包状态 1有效 2 失效
 * @param currentPage       当前页数
 * @param pageSize          每页多少条记录
 * @see {@link http://m.jinhui365.cn |接口文档未找到}
 */
AssetsService.prototype.$getCurrentProfit = function(businessFlag, mStockType, currentPage, pageSize) {
  currentPage = currentPage || 1;
  pageSize = pageSize || 20;

  var url = '/user/transactionrecord/list';
  return this.http.$getJson(url, {
    businessFlag: businessFlag,
    mStockType: mStockType,
    currentPage: currentPage,
    pageSize: pageSize
  })
};

/**
 * 首付贷收款计划
 * @param fundCode          基金代码
 * @param actionIn          客户类型 0借款人 1担保人 2投资人
 * @param shareRatio        持仓占比
 * @param projectCode       项目代码
 * @param fundName          基金名称
 * @see {@link https://trac.gemantic.com/wiki/api/licai/assets/p2preceivePlan |接口文档}
 */
AssetsService.prototype.$getP2PRecievePlan = function(fundCode, actionIn, shareRatio, projectCode, fundName) {
  var url = '/queryLoanDetail';
  return this.http.$getJson(url, {
    fundCode: fundCode,
    actionIn: actionIn,
    shareRatio: shareRatio,
    projectCode: projectCode,
    fundName: fundName
  })
};

/**
 * 获取优选理财（Y4产品）收益分配
 * @param code       产品code
 * @param amount     购买份数
 * @see {@link https://trac.gemantic.com/wiki/api/licai/assets/fixedY4 |接口文档}
 */
AssetsService.prototype.$getY4LoanDetail = function(code, amount) {
  var url = '/user/queryLoanDetailY4';
  return this.http.$getJson(url, {
    fundCode: code,
    amount: amount
  })
};

/**
 * 公募基金_历史净值列表
 * @param code              产品code
 * @param currentPage       当前页数
 * @param pageCount         每页多少条记录
 * @see {@link http://tools.jinhui365.cn/interface/detail?id=273 |接口文档}
 */
AssetsService.prototype.$getHistoryNetval = function(code, currentPage, pageCount) {
  currentPage = currentPage || 1;
  pageCount = pageCount || 20;
  var url = '/gm/detail/historyNetval';
  return this.http.$getJson(url, {
    code: code,
    currentPage: currentPage,
    pageCount: pageCount
  })
};

/**
 * 公募基金_分红列表
 * @param code              产品code
 * @param currentPage       当前页数
 * @param pageCount         每页多少条记录
 * @see {@link http://tools.jinhui365.cn/interface/detail?id=274 |接口文档}
 */
AssetsService.prototype.$getHistoryBonus = function(code, currentPage, pageCount) {
  var url = '/gm/detail/historyBonus';
  currentPage = currentPage || 1;
  pageCount = pageCount || 20;
  return this.http.$getJson(url, {
    code: code,
    currentPage: currentPage,
    pageCount: pageCount
  })
};

module.exports = exports = AssetsService;