var HttpService = require('../index');
var testIndex = require('./index');
var dealService = HttpService.$getDefaultService().$getDealService();
var userService = HttpService.$getDefaultService().$getUserService();



describe('测试非固定收益产品购买接口', function(done) {

  var mobile = '11143211240';
  before(function () {
    return userService.$login(mobile, '111111').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(result);
    });
  });

  this.timeout(10000);

  var shbBuyParams = {
    password: '111111',
    payType: '0',
    mobile: mobile,
    balance: '1',
    cashFundCompany: '9992',
    cashFundCode: 'y00003',
    bankAccount: 'PGaodPDBidTuEDX7DblMGg==',
    bankNo: 'ZLRT',
    fundName: '超级活宝·爽活宝1606',
    parentCode: 'GY0002',
    fundType: 'opencash'
  };
  var hbBuyParams = {
    password: '111111',
    payType: '0',
    mobile: mobile,
    balance: '1',
    cashFundCompany: '18',
    cashFundCode: '180008',
    bankAccount: 'od8qDKZ1od+h3yoMpnWh357+c4ccGiOX',
    bankNo: 'GHZF',
    fundName: '金汇活宝·银华货币A'
  };
  it('爽活宝：payType 0(使用一张非华创银行卡支付) should return a right code when success', function() {
    return dealService.$buyUnfix(shbBuyParams).should.eventually.satisfy(function(obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('金汇活宝：payType 0(使用一张非华创银行卡支付) should return a right code when success', function() {
    return dealService.$buyUnfix(hbBuyParams).should.eventually.satisfy(function(obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

});

describe('测试固定收益产品购买接口', function(done) {

  var mobile = '11143211240';
  before(function () {
    return userService.$login(mobile, '111111').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(result);
    });
  });

  this.timeout(10000);

  var spiritBuyParams = {
    jhPassword: '111111',
    fundCode: 'Y90068',
    fundCompany: '9998',
    payType: '0',
    productName: '自动化长期购买产品',
    deferStatus: '1',
    fareSx: '0',
    mStockType: 'honor',
    amount: '10000',
    viewAmount: '10000',
    bankAmount: '10000',
    bankAccount: 'PGaodPDBidTuEDX7DblMGg==',
    bankNo: 'ZLRT',
    password: '111111',
    mobiletelephone: mobile
  };
  it.skip('金汇年宝：payType 0(使用一张非华创银行卡支付) should return a right code when success', function() {
    return dealService.$buyFix(spiritBuyParams).should.eventually.satisfy(function(obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试余额充值接口', function(done) {

  var mobile = '11143211240';
  before(function () {
    return userService.$login(mobile, '111111').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(result);
    });
  });

  this.timeout(10000);

  var spiritBuyParams = {
    password: '111111',
    transAmt: '1',
    bankAccount: 'MQvaPiTaYk9+LhxcKL9SUAfgbom6n4O9 ',
    bankNo: 'ZSZF'
  };
  it('招商银行充值', function() {
    return dealService.$balanceReload(spiritBuyParams).should.eventually.satisfy(function(obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试余额提现接口', function(done) {

  var mobile = '11143211240';
  before(function () {
    return userService.$login(mobile, '111111').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(result);
    });
  });

  this.timeout(10000);

  var balanceCashingParams = {
    transAmt: '1',
    verifyCode: '7310',
    mobile: '11143211240',
    withdrawType: '0',
    password: '111111',
    bankCode: 'ZSZF',
    cardNo: 'MQvaPiTaYk9+LhxcKL9SUAfgbom6n4O9'
  };

  it('should return a right code', function () {
    return userService.$sendVerifyCode(mobile, 'withdraw').should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('招商银行余额提现', function() {
    return dealService.$balanceCashing(balanceCashingParams).should.eventually.satisfy(function(obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试活宝提现接口', function(done) {

  var mobile = '11143211240';
  before(function () {
    return userService.$login(mobile, '111111').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(result);
    });
  });

  this.timeout(10000);

  var hbCashingParams = {
    balance: '1',
    verifyCode: '7310',
    mobile: '11143211240',
    exceedflag: '0',
    password: '111111',
    bankNo: 'ZSZF',
    bankAccount: 'MQvaPiTaYk9+LhxcKL9SUAfgbom6n4O9',
    cashFundCompany: 18,
    cashFundCode: 180008
  };

  it('should return a right code', function () {
    return userService.$sendVerifyCode(mobile, 'withdrawJhb').should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it.skip('招商银行活宝快速提现 should return code 0', function() {
    return dealService.$unfixCashing(hbCashingParams).should.eventually.satisfy(function(obj) {

      return obj.message.code == 0 || obj.message.code == 959622;//正常返回，或者返回提现次数超限
    }).notify(done);
  });
});

describe('测试爽活宝提现接口', function(done) {

  var mobile = '11143211240';
  before(function () {
    return userService.$login(mobile, '111111').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(result);
    });
  });

  this.timeout(10000);

  var shbCashingParams = {
    balance: '1',
    verifyCode: '7310',
    mobile: '11143211240',
    exceedflag: '1',
    password: '111111',
    bankNo: 'ZSZF',
    bankAccount: 'MQvaPiTaYk9+LhxcKL9SUAfgbom6n4O9',
    cashFundCompany: '9992',
    cashFundCode: 'GY0002',
    parentCode: 'GY0002',
    fundType: 'opencash'
  };

  it('should return a right code', function () {
    return userService.$sendVerifyCode(mobile, 'withdrawCjhb').should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('招商银行爽活宝快速提现 should return code 0', function() {
    return dealService.$unfixArriveTime(shbCashingParams).should.eventually.satisfy(function(obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试活期产品提现接口', function(done) {

  var mobile = '11143211240';
  before(function () {
    return userService.$login(mobile, '111111').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(result);
    });
  });

  this.timeout(10000);

  it('it should return code 0 without args', function() {
    return dealService.$unfixArriveTime().should.eventually.satisfy(function(obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('it should return code 0  when arriveType equal opencash', function() {
    return dealService.$unfixArriveTime('opencash').should.eventually.satisfy(function(obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('it should return code 0  when arriveType equal spirit', function() {
    return dealService.$unfixArriveTime('spirit').should.eventually.satisfy(function(obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('it should return code 0  when arriveType equal opencashNew', function() {
    return dealService.$unfixArriveTime('opencashNew').should.eventually.satisfy(function(obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试余额提现控制接口', function(done) {

  var mobile = '11143211240';
  before(function () {
    return userService.$login(mobile, '111111').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(result);
    });
  });

  this.timeout(10000);

  it('it should return code 0 without args', function() {
    return dealService.$balanceLimit().should.eventually.satisfy(function(obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

});

describe('测试爽活宝资金池接口', function(done) {

  var mobile = '11143211240';
  before(function () {
    return userService.$login(mobile, '111111').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(result);
    });
  });

  this.timeout(10000);

  it('it should return code 0 without args', function() {
    return dealService.$shbCapitalPool().should.eventually.satisfy(function(obj) {
      console.log(obj)
      return obj.message.code == 0;
    }).notify(done);
  });

});

describe('测试资管计划产品首次认购接口', function(done) {

  var mobile = '11143211240';
  before(function () {
    return userService.$login(mobile, '111111').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(result);
    });
  });

  this.timeout(50000);

  var buyParams = {
    jhPassword: '111111',
    fundCode: 'S55787',
    fundCompany: '00',
    payType: '0',
    deferStatus: '1',
    chargeType: '0',
    fareSx: '0',
    mStockType: 'zotc',
    buyDesc: 'buy',
    amount: '1000000',
    viewAmount: '1000000',
    bankAmount: '1000000',
    bankNo: 'ZLRT',
    bankAccount: 'PGaodPDBidTuEDX7DblMGg==',
    bankName: '账户余额',
    password: '111111',
    mobiletelephone: '11143211240'
  };
  it('资管计划认购期-价内-余额支付 should return a right code when success', function() {
    return dealService.$otcSubscriptionBuy(buyParams).should.eventually.satisfy(function(obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试获取活期支付列表', function(done) {
  this.timeout(5000);

  it('获取活期支付列表 should return a right code when success', function() {
    return dealService.$getPmPaylist().should.eventually.satisfy(function(obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});