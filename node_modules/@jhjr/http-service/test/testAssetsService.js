var HttpService = require('../index');
var testIndex = require('./index');
var assetsService = HttpService.$getDefaultService().$getAssetsService();
var userService = HttpService.$getDefaultService().$getUserService();

describe('设置当前测试用例用户信息', function () {
  this.timeout(8000);
  var mobile = '11143211240';
  before(function () {
    return userService.$login(mobile, '111111').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(result);
    });
  });
  it('****', function () {});
});

describe('测试我的资产接口', function (done) {
  this.timeout(5000);

  it('should return a right code when success', function () {
    return assetsService.$getAssets().should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试定期产品持仓接口', function (done) {
  this.timeout(5000);
  var configMap = {
    honor: 'w',
    p2p: 'x',
    dingqi:'mk',
    fund: 'p,t,o,u',
    platformDebt: 'n',
    opencashHeBao: 'dd',
    prifund:'v',
    mutualFund: 'mutualFund'
  };
  it('优选理财 assets should return a right code if successful', function () {
    return assetsService.$getFixedAssets(configMap.honor).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
  it('定期理财 assets should return a right code if successful', function () {
    return assetsService.$getFixedAssets(configMap.dingqi).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
  it('高端理财 assets should return a right code if successful', function () {
    return assetsService.$getFixedAssets(configMap.fund).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
  it('私募基金 assets should return a right code if successful', function () {
    return assetsService.$getFixedAssets(configMap.prifund).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
  it('平台债 assets should return a right code if successful', function () {
    return assetsService.$getFixedAssets(configMap.platformDebt).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
  it('超级活宝(和包) assets should return a right code if successful', function () {
    return assetsService.$getFixedAssets(configMap.opencashHeBao).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试收益明细接口', function (done) {
  this.timeout(10000);
  it('all profit interface should return a right code when success', function () {
    return assetsService.$getProfit('ALL', 1, 10).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('定期理财 profit interface should return a right code when success', function () {
    return assetsService.$getProfit('E1,E4,E5,B0', 1, 10).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('开磷宝 profit interface should return a right code when success', function () {
    return assetsService.$getProfit('B3,B4', 1, 10).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('银杏债 profit interface should return a right code when success', function () {
    return assetsService.$getProfit('C0,E1,E4,E5', 1, 10).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('收益凭证/资管计划 profit interface should return a right code when success', function () {
    return assetsService.$getProfit('F0,F1', 1, 10).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('私募基金 profit interface should return a right code when success', function () {
    return assetsService.$getProfit('H0', 1, 10).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('金汇活宝 profit interface should return a right code when success', function () {
    return assetsService.$getProfit('A0', 1, 10, 180008 ,18).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('爽活宝 profit interface should return a right code when success', function () {
    return assetsService.$getProfit('A1', 1, 10, 'GY0002', '').should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('新人宝 profit interface should return a right code when success', function () {
    return assetsService.$getProfit('A3', 1, 10, 'GY0001', '').should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试红包列表接口', function (done) {
  it('redEnvelope interface that able should return a right code when success', function () {
    return assetsService.$getRedEnvelope(1).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
  it('redEnvelope interface that unable should return a right code when success', function () {
    return assetsService.$getRedEnvelope(0).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试交易记录接口', function (done) {
  this.timeout(10000);
  it('record interface should return a right code when success', function () {
    return assetsService.$getRecord(1, 10).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});
describe('测试在途资金查询接口', function (done) {
  this.timeout(10000);
  it('uncome interface should return a right code when success', function () {
    return assetsService.$getUncome().should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试V码列表接口', function (done) {
  this.timeout(10000);
  it('vCodeList interface should return a right code when success', function () {
    return assetsService.$getVCodeList(1, 10).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试活期产品提现额度接口', function (done) {
  this.timeout(10000);
  it('金汇活宝 limit interface should return a right code when success', function () {
    return assetsService.$getUnfixLimit('current', '180008', '18').should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('爽活宝 limit interface should return a right code when success', function () {
    return assetsService.$getUnfixLimit('opencash', 'GY0002', '').should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});
describe('测试余额充值提现记录接口', function (done) {
  this.timeout(10000);
  it('余额所有记录接口 should return a right code when success', function () {
    return assetsService.$getBalanceRecord(1, 10, 0).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
  it('余额充值记录接口 should return a right code when success', function () {
    return assetsService.$getBalanceRecord(1, 10, 1).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('余额提现记录接口 interface should return a right code when success', function () {
    return assetsService.$getBalanceRecord(1, 10, 2).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});
describe('测试余额线下充值码接口', function (done) {
  this.timeout(10000);

  it('余额所有数据接口 should return a right code when success', function () {
    return assetsService.$getOfflineChargeCode(1, 10).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

});

describe('测试金汇活宝累计收益数据接口', function (done) {
  this.timeout(10000);
  it('余额所有数据接口 should return a right code when success', function () {
    return assetsService.$getCurrentProfit(221, 8, 1, 15).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

});

/*
*公募持仓相关接口测试
*/
describe('设置当前测试用例用户信息', function () {
  this.timeout(8000);
  var mobile = '18515279796';

  before(function () {
    return userService.$login(mobile, '123456').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(result);
    });
  });
  it('****', function () {});
});

describe('测试公募持仓获取接口',function (done) {
  it('公募基金 assets should return a right code if successful',function () {
    return assetsService.$getFixedAssets('mutualFund').should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
})
describe('测试货基收益明细',function (done) {

  it('公募基金 profit interface should return a right code when success', function () {
    return assetsService.$getProfit('', 1,10, '000330','9982').should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

})

//TODO: offlineChargeCode collectionPlan currentYieldCurve