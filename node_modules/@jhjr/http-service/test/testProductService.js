var HttpService = require('../index');// text/index.js文件中已经实例化过HttpService对象，这里直接取出实例化之后的defaultService属性
var testIndex = require('./index');
var productService = HttpService.$getDefaultService().$getProductService();
var userService = HttpService.$getDefaultService().$getUserService();


describe('测试优品热卖接口', function(done){
  this.timeout(5000);

  it.only('should return code(0)', function(){
    return productService.$getHotSale().should.eventually.satisfy(function(obj){
      return obj.message.code == 0
    }).notify(done);
  });
  it('production in guide-new should return code(0)', function(){
    return productService.$getHotSale(3).should.eventually.satisfy(function(obj){
      return obj.message.code == 0
    }).notify(done);
  });
  it('should return products more than one', function(){
    return productService.$getHotSale().should.eventually.satisfy(function(obj){
      return obj.message.code == 0 && obj.data.length > 0
    }).notify(done);
  });

  // 爽活宝不放在第一个，不作为测试用例
  // it('first product should be the shb', function(){
  //   return productService.$getHotSale().should.eventually.satisfy(function(obj){
  //     return obj.message.code == 0 && obj.data.length > 0 && obj.data[0].kind === 'opencash'
  //   }).notify(done);
  // });
});

describe('测试互动广告接口', function(done){
  this.timeout(5000);

  it('should return code(0)', function(){
    return productService.$getBannerList('website').should.eventually.satisfy(function(obj){
      return obj.message.code == 0
    }).notify(done);
  });
});

describe('测试首页活动推荐位产品接口', function(done){
  this.timeout(5000);

  it('should return code(0)', function(){
    return productService.$getIndexPromotion().should.eventually.satisfy(function(obj){
      return obj.message.code == 0
    }).notify(done);
  });
});

describe('测试平台数据接口', function(done){
  this.timeout(5000);

  it('should return code(0)', function(){
    return productService.$getDataSummary().should.eventually.satisfy(function(obj){
      return obj.message.code == 0
    }).notify(done);
  });
});

describe('测试产品列表接口', function(done){
  this.timeout(5000);

  before(function () {
    return userService.$login('11143211240', '111111').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(result);
    });
  });

  it('productList interface(no type argument) should return a right code', function(){
    return productService.$getProductList().should.eventually.satisfy(function(obj){
      return obj.message.code == 0;
    }).notify(done);
  });

  it('spriit productList interface should return a right code', function(){
    return productService.$getProductList('spirit').should.eventually.satisfy(function(obj){
      return obj.message.code == 0;
    }).notify(done);
  });

  it('prject productList interface should return a right code', function(){
    return productService.$getProductList('project,trustpro,zotc,sotc').should.eventually.satisfy(function(obj){
      return obj.message.code == 0;
    }).notify(done);
  });

  it('honor productList interface should return a right code', function(){
    return productService.$getProductList('honor').should.eventually.satisfy(function(obj){
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试固定收益产品详情接口', function(done) {
  this.timeout(5000);
  it('should return a right code when code is exists', function () {
    return productService.$getFixedProductDetail('999143').should.eventually.satisfy(function (obj) {
      return obj.message.code == 0 && obj.data.code == '999143';
    }).notify(done);
  });
});

describe('测试金汇活宝详情接口', function(done){
  it('should return a right code when code is exists', function(){
    return productService.$getUnfixedProductDetail('180008').should.eventually.satisfy(function(obj){
      return obj.message.code == 0 && obj.name == '金汇活宝';
    }).notify(done);
  });
});

describe('测试爽活宝产品（绑定后）详情接口', function(done){
  this.timeout(10000);
  before(function () {
    return userService.$login('11143211240', '111111').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(result);
    });
  });

  it('should return a right code and data.code shouldn\'t be empty  when coolCurrent be 1 and user has binded shb', function(){
    return productService.$getShbProductDetail('GY0002','1').should.eventually.satisfy(function(obj){
      return obj.message.code == 0 && obj.data.code !== ''
    }).notify(done);
  });

  after(function () {
    return userService.$login('11143211240', '111111').then(function (result) {
      HttpService.$getDefaultService().$setUserInfo(null);
    });
  });
});



describe('测试新人宝产品详情接口', function(done){
  this.timeout(5000);
  it('should return a right code when code is exists', function(){
    return productService.$getShbProductDetail('GY0001','1').should.eventually.satisfy(function(obj){
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试产品日历接口', function(done){
  this.timeout(5000);

  it('should return code(0)', function(){
    return productService.$getCalendar('F00712').should.eventually.satisfy(function(obj){
      return obj.message.code == 0
    }).notify(done);
  });
});

describe('测试首页公告接口', function(done){
  this.timeout(5000);

  it('should return code(0)', function(){
    return productService.$getBulletinDetail().should.eventually.satisfy(function(obj){
      return obj.message.code == 0
    }).notify(done);
  });
});

describe('测试首页活动图片接口', function(done){
  this.timeout(5000);

  it('should return code(0)', function(){
    return productService.$getActivityData().should.eventually.satisfy(function(obj){
      return obj.message.code == 0
    }).notify(done);
  });
});

describe('测试短期理财列表接口', function(done){
  this.timeout(5000);

  it.skip('should return code(0)', function(){
    return productService.$getDuanqiList().should.eventually.satisfy(function(obj){
      return obj.message.code == 0
    }).notify(done);
  });
});

describe('测试通用get接口', function(done){
  this.timeout(5000);

  it('should return code(0)', function(){
    return productService.$commonInterface('/product/recommendedDuanqi?serviceVersion=4.0', {aa:2,bb:3}).should.eventually.satisfy(function(obj){
      return obj.message.code == 0
    }).notify(done);
  });
});

describe('测试产品配置接口', function(done) {
  this.timeout(5000);
  it('should return a right code when code is exists', function () {
    return productService.$getAllProductConfigInfo().should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });

  it('should return a right code when code is exists', function () {
    return productService.$getAllProductConfigInfo(new Date().getTime()).should.eventually.satisfy(function (obj) {
      return obj.message.code == 0;
    }).notify(done);
  });
});

describe('测试通用post接口', function(done){
  this.timeout(5000);

  it('should return code(0)', function(){
    return productService.$commonPostInterface('/login.decryption', {uinfo: '11100006789', password: 111111}).should.eventually.satisfy(function(obj){
      return obj.message.code == 0
    }).notify(done);
  });
});