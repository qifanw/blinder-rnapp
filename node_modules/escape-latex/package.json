{
  "_args": [
    [
      {
        "raw": "escape-latex@1.1.1",
        "scope": null,
        "escapedName": "escape-latex",
        "name": "escape-latex",
        "rawSpec": "1.1.1",
        "spec": "1.1.1",
        "type": "version"
      },
      "/Users/wqf/Desktop/mgh-rnapp/node_modules/mathjs"
    ]
  ],
  "_cnpm_publish_time": 1534797663487,
  "_from": "escape-latex@1.1.1",
  "_hasShrinkwrap": false,
  "_id": "escape-latex@1.1.1",
  "_location": "/escape-latex",
  "_nodeVersion": "10.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/escape-latex_1.1.1_1534797663355_0.9020681057912046"
  },
  "_npmUser": {
    "name": "dangmai",
    "email": "contact@dangmai.net"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "escape-latex@1.1.1",
    "scope": null,
    "escapedName": "escape-latex",
    "name": "escape-latex",
    "rawSpec": "1.1.1",
    "spec": "1.1.1",
    "type": "version"
  },
  "_requiredBy": [
    "/mathjs"
  ],
  "_resolved": "http://cnpm.jinhui365.cn/escape-latex/download/escape-latex-1.1.1.tgz",
  "_shasum": "657d8632af8849a5db8766778d4a43da9dec3376",
  "_shrinkwrap": null,
  "_spec": "escape-latex@1.1.1",
  "_where": "/Users/wqf/Desktop/mgh-rnapp/node_modules/mathjs",
  "author": {
    "name": "Dang Mai"
  },
  "bugs": {
    "url": "https://github.com/dangmai/escape-latex/issues"
  },
  "dependencies": {},
  "description": "Escape LaTeX special characters with Javascript",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-plugin-transform-object-assign": "^6.22.0",
    "babel-preset-env": "^1.6.1",
    "chai": "^4.1.2",
    "eslint": "^5.0.1",
    "eslint-config-google": "^0.9.1",
    "eslint-config-prettier": "^3.0.1",
    "husky": "^0.14.3",
    "lint-staged": "^7.0.5",
    "mocha": "^5.0.0",
    "prettier": "^1.9.2"
  },
  "directories": {},
  "dist": {
    "shasum": "657d8632af8849a5db8766778d4a43da9dec3376",
    "size": 3372,
    "noattachment": false,
    "key": "/escape-latex/-/escape-latex-1.1.1.tgz",
    "tarball": "http://cnpm.jinhui365.cn/escape-latex/download/escape-latex-1.1.1.tgz"
  },
  "eslintConfig": {
    "parserOptions": {
      "ecmaVersion": 8
    },
    "extends": [
      "eslint:recommended",
      "google",
      "prettier"
    ],
    "env": {
      "node": "true"
    }
  },
  "files": [
    "dist"
  ],
  "gitHead": "ce61ea0fdc080fada8d6c83cd20caa9df3abe92f",
  "homepage": "https://github.com/dangmai/escape-latex#readme",
  "keywords": [
    "latex",
    "escape"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{js,json,css,md}": [
      "npm run prettier",
      "git add"
    ]
  },
  "main": "./dist/index.js",
  "maintainers": [
    {
      "name": "dangmai",
      "email": "contact@dangmai.net"
    }
  ],
  "name": "escape-latex",
  "optionalDependencies": {},
  "prettier": {
    "trailingComma": "all"
  },
  "publish_time": 1534797663487,
  "readme": "# escape-latex\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/dangmai/escape-latex.svg)](https://greenkeeper.io/)\n\n[![Build Status](https://travis-ci.org/dangmai/escape-latex.png)](https://travis-ci.org/dangmai/escape-latex)\n\nEscape LaTeX special characters with Javascript in NodeJS (>= 4.x) environment.\n\n## Usage\n\n```javascript\nnpm install escape-latex\nvar lescape = require('escape-latex');\nlescape(\"String to be escaped here #yolo\");\n```\n\n## API\n\n```javascript\nlescape((input: String), {\n  preserveFormatting: Boolean,\n  escapeMapFn: Function,\n});\n```\n\nBy default,\n`escape-latex` only escapes characters that would result in malformed LaTeX.\nThese characters include `# $ % & \\ ^ _ { }`.\n\nThis means that the final LaTeX output might not look the same as your input Javascript string.\nFor example, multiple spaces are kept as-is, which may be truncated to 1 space by your LaTeX software.\n\nIf you want the final output string to be as similar to your input Javascript string as possible,\nyou can set the `preserveFormatting` param to `true`, like so:\n\n```javascript\nlescape(\"Hello   World\", { preserveFormatting: true });\n// Hello~~~World\n```\n\nWhich will be converted to three non-breaking spaces by your LaTeX software.\n\nThe list of format characters that are escaped include `space, \\t (tab), – (en-dash), — (em-dash)`.\n\nThere is also the param `escapeMapFn` to modify the mapping of escaped characters,\nso you can add/modify/remove your own escapes if necessary.\n\nIt accepts a callback function that takes in the default character escapes and the formatting escapes as parameters, and returns a complete escape mapping. Here's an example:\n\n```javascript\nlescape(\"Hello   World\", {\n  preseveFormatting: true,\n  escapeMapFn: function(defaultEscapes, formattingEscapes) {\n    formattingEscapes[\" \"] = \"\\\\\\\\\";\n    return Object.assign({}, defaultEscapes, formattingEscapes);\n  },\n});\n// Hello\\\\\\\\\\\\world\n```\n\n## Testing\n\n```\nnpm test\n```\n\n## Notes\n\n* If you are updating from `escape-latex < 1.0.0`,\n  the `en-dash` and `em-dash` are no longer escaped by default.\n  Please use `preserveFormatting` to turn them on if necessary.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dangmai/escape-latex.git"
  },
  "scripts": {
    "build": "babel ./src -d ./dist --ignore index.test.js",
    "clean": "rm -rf dist",
    "init": "mkdir dist",
    "lint": "eslint ./src",
    "postversion": "git push && git push --tags",
    "prebuild": "npm run clean && npm run init",
    "precommit": "npm run lint && lint-staged",
    "prettier": "prettier --write ./src/**/*.js",
    "preversion": "npm test && npm run build",
    "test": "mocha --require babel-core/register -u tdd ./src/**/*.test.js"
  },
  "version": "1.1.1"
}
